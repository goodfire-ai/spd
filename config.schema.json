{"$defs": {"CEandKLLossesConfig": {"additionalProperties": false, "properties": {"classname": {"const": "CEandKLLosses", "default": "CEandKLLosses", "title": "Classname", "type": "string"}, "rounding_threshold": {"title": "Rounding Threshold", "type": "number"}}, "required": ["rounding_threshold"], "title": "CEandKLLossesConfig", "type": "object"}, "CIHistogramsConfig": {"additionalProperties": false, "properties": {"classname": {"const": "CIHistograms", "default": "CIHistograms", "title": "Classname", "type": "string"}, "n_batches_accum": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "N Batches Accum"}}, "required": ["n_batches_accum"], "title": "CIHistogramsConfig", "type": "object"}, "CIMaskedReconLayerwiseLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "CIMaskedReconLayerwiseLoss", "default": "CIMaskedReconLayerwiseLoss", "title": "Classname", "type": "string"}}, "title": "CIMaskedReconLayerwiseLossConfig", "type": "object"}, "CIMaskedReconLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "CIMaskedReconLoss", "default": "CIMaskedReconLoss", "title": "Classname", "type": "string"}}, "title": "CIMaskedReconLossConfig", "type": "object"}, "CIMaskedReconSubsetLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "CIMaskedReconSubsetLoss", "default": "CIMaskedReconSubsetLoss", "title": "Classname", "type": "string"}, "subset_routing_cfg": {"anyOf": [{"const": "uniform_k-stochastic", "type": "string"}, {"$ref": "#/$defs/DensityBasedRouting"}], "title": "Subset Routing Cfg"}}, "required": ["subset_routing_cfg"], "title": "CIMaskedReconSubsetLossConfig", "type": "object"}, "CIMeanPerComponentConfig": {"additionalProperties": false, "properties": {"classname": {"const": "CIMeanPerComponent", "default": "CIMeanPerComponent", "title": "Classname", "type": "string"}}, "title": "CIMeanPerComponentConfig", "type": "object"}, "CI_L0Config": {"additionalProperties": false, "properties": {"classname": {"const": "CI_L0", "default": "CI_L0", "title": "Classname", "type": "string"}, "groups": {"anyOf": [{"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, {"type": "null"}], "title": "Groups"}}, "required": ["groups"], "title": "CI_L0Config", "type": "object"}, "ComponentActivationDensityConfig": {"additionalProperties": false, "properties": {"classname": {"const": "ComponentActivationDensity", "default": "ComponentActivationDensity", "title": "Classname", "type": "string"}}, "title": "ComponentActivationDensityConfig", "type": "object"}, "CosineSchedule": {"additionalProperties": false, "properties": {"type": {"const": "cosine", "default": "cosine", "title": "Type", "type": "string"}, "start_value": {"title": "Start Value", "type": "number"}, "end_value": {"title": "End Value", "type": "number"}, "start_frac": {"title": "Start Frac", "type": "number"}, "end_frac": {"title": "End Frac", "type": "number"}}, "required": ["start_value", "end_value", "start_frac", "end_frac"], "title": "CosineSchedule", "type": "object"}, "DensityBasedRouting": {"additionalProperties": false, "properties": {"routing_density": {"anyOf": [{"type": "integer"}, {"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}], "title": "Routing Density"}}, "required": ["routing_density"], "title": "DensityBasedRouting", "type": "object"}, "FaithfulnessLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "FaithfulnessLoss", "default": "FaithfulnessLoss", "title": "Classname", "type": "string"}}, "title": "FaithfulnessLossConfig", "type": "object"}, "IHTaskConfig": {"additionalProperties": false, "properties": {"task_name": {"const": "induction_head", "title": "Task Name", "type": "string"}, "prefix_window": {"anyOf": [{"exclusiveMinimum": 0, "type": "integer"}, {"type": "null"}], "default": null, "description": "Number of tokens to use as a prefix window for the induction head. If none, uses the full sequence length.", "title": "Prefix Window"}}, "required": ["task_name"], "title": "IHTaskConfig", "type": "object"}, "IdentityCIErrorConfig": {"additionalProperties": false, "properties": {"classname": {"const": "IdentityCIError", "default": "IdentityCIError", "title": "Classname", "type": "string"}, "identity_ci": {"anyOf": [{"items": {"additionalProperties": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "object"}, "type": "array"}, {"type": "null"}], "title": "Identity Ci"}, "dense_ci": {"anyOf": [{"items": {"additionalProperties": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "object"}, "type": "array"}, {"type": "null"}], "title": "Dense Ci"}}, "required": ["identity_ci", "dense_ci"], "title": "IdentityCIErrorConfig", "type": "object"}, "ImportanceMinimalityLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "ImportanceMinimalityLoss", "default": "ImportanceMinimalityLoss", "title": "Classname", "type": "string"}, "pnorm": {"title": "Pnorm", "type": "number"}, "p_anneal_start_frac": {"default": 1.0, "title": "P Anneal Start Frac", "type": "number"}, "p_anneal_final_p": {"anyOf": [{"type": "number"}, {"type": "null"}], "default": null, "title": "P Anneal Final P"}, "p_anneal_end_frac": {"default": 1.0, "title": "P Anneal End Frac", "type": "number"}, "eps": {"default": 1e-12, "title": "Eps", "type": "number"}}, "required": ["pnorm"], "title": "ImportanceMinimalityLossConfig", "type": "object"}, "LMTaskConfig": {"additionalProperties": false, "properties": {"task_name": {"const": "lm", "default": "lm", "description": "Identifier for the language-model decomposition task", "title": "Task Name", "type": "string"}, "max_seq_len": {"default": 512, "description": "Maximum sequence length to truncate or pad inputs to", "exclusiveMinimum": 0, "title": "Max Seq Len", "type": "integer"}, "buffer_size": {"default": 1000, "description": "Buffered sample count for streaming dataset shuffling", "exclusiveMinimum": 0, "title": "Buffer Size", "type": "integer"}, "dataset_name": {"default": "lennart-finke/SimpleStories", "description": "HuggingFace dataset identifier to use for the LM task", "title": "Dataset Name", "type": "string"}, "column_name": {"default": "story", "description": "Dataset column that contains the text to train on", "title": "Column Name", "type": "string"}, "train_data_split": {"default": "train", "description": "Name of the dataset split used for training", "title": "Train Data Split", "type": "string"}, "eval_data_split": {"default": "test", "description": "Name of the dataset split used for evaluation", "title": "Eval Data Split", "type": "string"}, "shuffle_each_epoch": {"default": true, "description": "Whether to reshuffle data at each epoch. Set False in tests to keep fixed order across dp modes.", "title": "Shuffle Each Epoch", "type": "boolean"}, "is_tokenized": {"default": false, "description": "Whether the dataset is already tokenized", "title": "Is Tokenized", "type": "boolean"}, "streaming": {"default": false, "description": "Whether to use a streaming dataset", "title": "Streaming", "type": "boolean"}}, "title": "LMTaskConfig", "type": "object"}, "LinearSchedule": {"additionalProperties": false, "properties": {"type": {"const": "linear", "default": "linear", "title": "Type", "type": "string"}, "start_value": {"title": "Start Value", "type": "number"}, "end_value": {"title": "End Value", "type": "number"}, "start_frac": {"title": "Start Frac", "type": "number"}, "end_frac": {"title": "End Frac", "type": "number"}}, "required": ["start_value", "end_value", "start_frac", "end_frac"], "title": "LinearSchedule", "type": "object"}, "PGDReconLayerwiseLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "init": {"enum": ["random", "ones", "zeroes"], "title": "Init", "type": "string"}, "step_size": {"title": "Step Size", "type": "number"}, "n_steps": {"title": "N Steps", "type": "integer"}, "mask_scope": {"enum": ["unique_per_datapoint", "shared_across_batch"], "title": "Mask Scope", "type": "string"}, "classname": {"const": "PGDReconLayerwiseLoss", "default": "PGDReconLayerwiseLoss", "title": "Classname", "type": "string"}}, "required": ["init", "step_size", "n_steps", "mask_scope"], "title": "PGDReconLayerwiseLossConfig", "type": "object"}, "PGDReconLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "init": {"enum": ["random", "ones", "zeroes"], "title": "Init", "type": "string"}, "step_size": {"title": "Step Size", "type": "number"}, "n_steps": {"title": "N Steps", "type": "integer"}, "mask_scope": {"enum": ["unique_per_datapoint", "shared_across_batch"], "title": "Mask Scope", "type": "string"}, "classname": {"const": "PGDReconLoss", "default": "PGDReconLoss", "title": "Classname", "type": "string"}}, "required": ["init", "step_size", "n_steps", "mask_scope"], "title": "PGDReconLossConfig", "type": "object"}, "PGDReconSubsetLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "init": {"enum": ["random", "ones", "zeroes"], "title": "Init", "type": "string"}, "step_size": {"title": "Step Size", "type": "number"}, "n_steps": {"title": "N Steps", "type": "integer"}, "mask_scope": {"enum": ["unique_per_datapoint", "shared_across_batch"], "title": "Mask Scope", "type": "string"}, "classname": {"const": "PGDReconSubsetLoss", "default": "PGDReconSubsetLoss", "title": "Classname", "type": "string"}, "subset_routing_cfg": {"anyOf": [{"const": "uniform_k-stochastic", "type": "string"}, {"$ref": "#/$defs/DensityBasedRouting"}], "title": "Subset Routing Cfg"}}, "required": ["init", "step_size", "n_steps", "mask_scope", "subset_routing_cfg"], "title": "PGDReconSubsetLossConfig", "type": "object"}, "PermutedCIPlotsConfig": {"additionalProperties": false, "properties": {"classname": {"const": "PermutedCIPlots", "default": "PermutedCIPlots", "title": "Classname", "type": "string"}, "identity_patterns": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Identity Patterns"}, "dense_patterns": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Dense Patterns"}}, "required": ["identity_patterns", "dense_patterns"], "title": "PermutedCIPlotsConfig", "type": "object"}, "ResidMLPTaskConfig": {"additionalProperties": false, "properties": {"task_name": {"const": "resid_mlp", "default": "resid_mlp", "description": "Identifier for the residual-MLP decomposition task", "title": "Task Name", "type": "string"}, "feature_probability": {"description": "Probability that a given feature is active in generated data", "maximum": 1, "minimum": 0, "title": "Feature Probability", "type": "number"}, "data_generation_type": {"default": "at_least_zero_active", "description": "Strategy for generating synthetic data for residual-MLP training", "enum": ["exactly_one_active", "exactly_two_active", "at_least_zero_active"], "title": "Data Generation Type", "type": "string"}}, "required": ["feature_probability"], "title": "ResidMLPTaskConfig", "type": "object"}, "StochasticArbHiddenActsReconLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "StochasticArbHiddenActsReconLoss", "default": "StochasticArbHiddenActsReconLoss", "title": "Classname", "type": "string"}, "pre_target_module_patterns": {"items": {"type": "string"}, "title": "Pre Target Module Patterns", "type": "array"}, "post_target_module_patterns": {"items": {"type": "string"}, "title": "Post Target Module Patterns", "type": "array"}}, "required": ["pre_target_module_patterns", "post_target_module_patterns"], "title": "StochasticArbHiddenActsReconLossConfig", "type": "object"}, "StochasticHiddenActsReconLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "StochasticHiddenActsReconLoss", "default": "StochasticHiddenActsReconLoss", "title": "Classname", "type": "string"}}, "title": "StochasticHiddenActsReconLossConfig", "type": "object"}, "StochasticReconLayerwiseLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "StochasticReconLayerwiseLoss", "default": "StochasticReconLayerwiseLoss", "title": "Classname", "type": "string"}}, "title": "StochasticReconLayerwiseLossConfig", "type": "object"}, "StochasticReconLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "StochasticReconLoss", "default": "StochasticReconLoss", "title": "Classname", "type": "string"}}, "title": "StochasticReconLossConfig", "type": "object"}, "StochasticReconSubsetCEAndKLConfig": {"additionalProperties": false, "properties": {"classname": {"const": "StochasticReconSubsetCEAndKL", "default": "StochasticReconSubsetCEAndKL", "title": "Classname", "type": "string"}, "include_patterns": {"anyOf": [{"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, {"type": "null"}], "title": "Include Patterns"}, "exclude_patterns": {"anyOf": [{"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, {"type": "null"}], "title": "Exclude Patterns"}}, "required": ["include_patterns", "exclude_patterns"], "title": "StochasticReconSubsetCEAndKLConfig", "type": "object"}, "StochasticReconSubsetLossConfig": {"additionalProperties": false, "properties": {"coeff": {"anyOf": [{"type": "number"}, {"discriminator": {"mapping": {"cosine": "#/$defs/CosineSchedule", "linear": "#/$defs/LinearSchedule"}, "propertyName": "type"}, "oneOf": [{"$ref": "#/$defs/LinearSchedule"}, {"$ref": "#/$defs/CosineSchedule"}]}, {"type": "null"}], "default": null, "description": "Loss coefficient or coefficient schedule. Used when metric is in loss_metric_configs.", "title": "Coeff"}, "classname": {"const": "StochasticReconSubsetLoss", "default": "StochasticReconSubsetLoss", "title": "Classname", "type": "string"}, "subset_routing_cfg": {"anyOf": [{"const": "uniform_k-stochastic", "type": "string"}, {"$ref": "#/$defs/DensityBasedRouting"}], "title": "Subset Routing Cfg"}}, "required": ["subset_routing_cfg"], "title": "StochasticReconSubsetLossConfig", "type": "object"}, "TMSTaskConfig": {"additionalProperties": false, "properties": {"task_name": {"const": "tms", "default": "tms", "description": "Task identifier for TMS", "title": "Task Name", "type": "string"}, "feature_probability": {"description": "Probability that a given feature is active in generated data", "maximum": 1, "minimum": 0, "title": "Feature Probability", "type": "number"}, "data_generation_type": {"default": "at_least_zero_active", "description": "Strategy for generating synthetic data for TMS training", "enum": ["exactly_one_active", "at_least_zero_active"], "title": "Data Generation Type", "type": "string"}}, "required": ["feature_probability"], "title": "TMSTaskConfig", "type": "object"}, "UVPlotsConfig": {"additionalProperties": false, "properties": {"classname": {"const": "UVPlots", "default": "UVPlots", "title": "Classname", "type": "string"}, "identity_patterns": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Identity Patterns"}, "dense_patterns": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Dense Patterns"}}, "required": ["identity_patterns", "dense_patterns"], "title": "UVPlotsConfig", "type": "object"}}, "additionalProperties": false, "properties": {"wandb_project": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Weights & Biases project name (set to None to disable WandB logging)", "title": "Wandb Project"}, "wandb_run_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Explicit name for the WandB run (None generates an automatic name)", "title": "Wandb Run Name"}, "wandb_run_name_prefix": {"default": "", "description": "Prefix prepended to an auto-generated WandB run name", "title": "Wandb Run Name Prefix", "type": "string"}, "seed": {"default": 0, "description": "Random seed for reproducibility", "title": "Seed", "type": "integer"}, "C": {"description": "The number of subcomponents per layer", "exclusiveMinimum": 0, "title": "C", "type": "integer"}, "n_mask_samples": {"description": "Number of stochastic masks to sample when using stochastic recon losses", "exclusiveMinimum": 0, "title": "N Mask Samples", "type": "integer"}, "ci_fn_type": {"default": "vector_mlp", "description": "Type of causal importance function used to calculate the causal importance.", "enum": ["mlp", "vector_mlp", "shared_mlp", "identity"], "title": "Ci Fn Type", "type": "string"}, "ci_fn_hidden_dims": {"default": [8], "description": "Hidden dimensions for the causal importance function used to calculate the causal importance", "items": {"minimum": 0, "type": "integer"}, "title": "Ci Fn Hidden Dims", "type": "array"}, "sampling": {"anyOf": [{"const": "continuous", "type": "string"}, {"const": "binomial", "type": "string"}], "default": "continuous", "description": "Sampling mode for stochastic elements: 'continuous' (default) or 'binomial'", "title": "Sampling"}, "sigmoid_type": {"default": "leaky_hard", "description": "Type of sigmoid to use for causal importance calculation", "enum": ["normal", "hard", "leaky_hard", "upper_leaky_hard", "swish_hard"], "title": "Sigmoid Type", "type": "string"}, "target_module_patterns": {"description": "List of fnmatch-style patterns that select modules to decompose", "items": {"type": "string"}, "title": "Target Module Patterns", "type": "array"}, "identity_module_patterns": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "default": null, "description": "List of fnmatch-style patterns that select modules in which an identity matrix should be inserted and decomposed beforehand", "title": "Identity Module Patterns"}, "use_delta_component": {"default": true, "description": "If True, use an extra component containing the difference between the target model and component weights. This allows for removing the faithfulness loss.", "title": "Use Delta Component", "type": "boolean"}, "loss_metric_configs": {"default": [], "description": "List of configs for loss metrics to compute (used for both training logs and eval); coefficients provided here are also used for weighting the training loss and eval loss/total.", "items": {"discriminator": {"mapping": {"CIMaskedReconLayerwiseLoss": "#/$defs/CIMaskedReconLayerwiseLossConfig", "CIMaskedReconLoss": "#/$defs/CIMaskedReconLossConfig", "CIMaskedReconSubsetLoss": "#/$defs/CIMaskedReconSubsetLossConfig", "FaithfulnessLoss": "#/$defs/FaithfulnessLossConfig", "ImportanceMinimalityLoss": "#/$defs/ImportanceMinimalityLossConfig", "PGDReconLayerwiseLoss": "#/$defs/PGDReconLayerwiseLossConfig", "PGDReconLoss": "#/$defs/PGDReconLossConfig", "PGDReconSubsetLoss": "#/$defs/PGDReconSubsetLossConfig", "StochasticArbHiddenActsReconLoss": "#/$defs/StochasticArbHiddenActsReconLossConfig", "StochasticHiddenActsReconLoss": "#/$defs/StochasticHiddenActsReconLossConfig", "StochasticReconLayerwiseLoss": "#/$defs/StochasticReconLayerwiseLossConfig", "StochasticReconLoss": "#/$defs/StochasticReconLossConfig", "StochasticReconSubsetLoss": "#/$defs/StochasticReconSubsetLossConfig"}, "propertyName": "classname"}, "oneOf": [{"$ref": "#/$defs/FaithfulnessLossConfig"}, {"$ref": "#/$defs/ImportanceMinimalityLossConfig"}, {"$ref": "#/$defs/CIMaskedReconLossConfig"}, {"$ref": "#/$defs/CIMaskedReconSubsetLossConfig"}, {"$ref": "#/$defs/CIMaskedReconLayerwiseLossConfig"}, {"$ref": "#/$defs/StochasticReconLossConfig"}, {"$ref": "#/$defs/StochasticReconSubsetLossConfig"}, {"$ref": "#/$defs/StochasticReconLayerwiseLossConfig"}, {"$ref": "#/$defs/PGDReconLossConfig"}, {"$ref": "#/$defs/PGDReconSubsetLossConfig"}, {"$ref": "#/$defs/PGDReconLayerwiseLossConfig"}, {"$ref": "#/$defs/StochasticHiddenActsReconLossConfig"}, {"$ref": "#/$defs/StochasticArbHiddenActsReconLossConfig"}]}, "title": "Loss Metric Configs", "type": "array"}, "output_loss_type": {"description": "Metric used to measure recon error between model outputs and targets", "enum": ["mse", "kl"], "title": "Output Loss Type", "type": "string"}, "lr": {"description": "Learning rate for optimiser", "exclusiveMinimum": 0, "title": "Lr", "type": "number"}, "steps": {"description": "Total number of optimisation steps", "minimum": 0, "title": "Steps", "type": "integer"}, "batch_size": {"description": "The effective batch size used for optimisation. Depending on gradient accumulation steps, it may be processed as multiple micro-batches.", "exclusiveMinimum": 0, "title": "Batch Size", "type": "integer"}, "gradient_accumulation_steps": {"default": 1, "description": "Number of steps to accumulate gradients over before updating parameters", "exclusiveMinimum": 0, "title": "Gradient Accumulation Steps", "type": "integer"}, "faithfulness_warmup_steps": {"default": 0, "description": "Number of warmup steps to optimize faithfulness loss before main training", "minimum": 0, "title": "Faithfulness Warmup Steps", "type": "integer"}, "faithfulness_warmup_lr": {"default": 0.001, "description": "Learning rate for warmup phase (optimizing faithfulness loss only)", "exclusiveMinimum": 0, "title": "Faithfulness Warmup Lr", "type": "number"}, "faithfulness_warmup_weight_decay": {"default": 0.0, "description": "Weight decay for warmup phase optimizer", "minimum": 0, "title": "Faithfulness Warmup Weight Decay", "type": "number"}, "lr_schedule": {"default": "constant", "description": "Type of learning-rate schedule to apply", "enum": ["linear", "constant", "cosine", "exponential"], "title": "Lr Schedule", "type": "string"}, "lr_exponential_halflife": {"anyOf": [{"exclusiveMinimum": 0, "type": "number"}, {"type": "null"}], "default": null, "description": "Half-life parameter when using an exponential LR schedule", "title": "Lr Exponential Halflife"}, "lr_warmup_pct": {"default": 0.0, "description": "Fraction of total steps to linearly warm up the learning rate", "maximum": 1, "minimum": 0, "title": "Lr Warmup Pct", "type": "number"}, "out_dir": {"anyOf": [{"format": "path", "type": "string"}, {"type": "null"}], "default": null, "description": "Directory to save output to. If None, creates a dir using the wandb run id or randomly generates one", "title": "Out Dir"}, "train_log_freq": {"description": "Interval (in steps) at which to log training metrics", "exclusiveMinimum": 0, "title": "Train Log Freq", "type": "integer"}, "eval_freq": {"description": "Interval (in steps) at which to log evaluation metrics", "exclusiveMinimum": 0, "title": "Eval Freq", "type": "integer"}, "eval_batch_size": {"description": "Batch size used for evaluation. If None, uses the same as `batch_size`.", "exclusiveMinimum": 0, "title": "Eval Batch Size", "type": "integer"}, "slow_eval_freq": {"description": "Interval (in steps) at which to run slow evaluation metrics. Must be a multiple of `eval_freq`.", "exclusiveMinimum": 0, "title": "Slow Eval Freq", "type": "integer"}, "n_eval_steps": {"description": "Number of steps to run evaluation for", "exclusiveMinimum": 0, "title": "N Eval Steps", "type": "integer"}, "slow_eval_on_first_step": {"default": true, "description": "Whether to run slow evaluation on the first step", "title": "Slow Eval On First Step", "type": "boolean"}, "save_freq": {"anyOf": [{"exclusiveMinimum": 0, "type": "integer"}, {"type": "null"}], "default": null, "description": "Interval (in steps) at which to save model checkpoints (None disables saving until the end of training).", "title": "Save Freq"}, "eval_metric_configs": {"default": [], "description": "List of configs for metrics to use for evaluation", "items": {"discriminator": {"mapping": {"CEandKLLosses": "#/$defs/CEandKLLossesConfig", "CIHistograms": "#/$defs/CIHistogramsConfig", "CIMaskedReconLayerwiseLoss": "#/$defs/CIMaskedReconLayerwiseLossConfig", "CIMaskedReconLoss": "#/$defs/CIMaskedReconLossConfig", "CIMaskedReconSubsetLoss": "#/$defs/CIMaskedReconSubsetLossConfig", "CIMeanPerComponent": "#/$defs/CIMeanPerComponentConfig", "CI_L0": "#/$defs/CI_L0Config", "ComponentActivationDensity": "#/$defs/ComponentActivationDensityConfig", "FaithfulnessLoss": "#/$defs/FaithfulnessLossConfig", "IdentityCIError": "#/$defs/IdentityCIErrorConfig", "ImportanceMinimalityLoss": "#/$defs/ImportanceMinimalityLossConfig", "PGDReconLayerwiseLoss": "#/$defs/PGDReconLayerwiseLossConfig", "PGDReconLoss": "#/$defs/PGDReconLossConfig", "PGDReconSubsetLoss": "#/$defs/PGDReconSubsetLossConfig", "PermutedCIPlots": "#/$defs/PermutedCIPlotsConfig", "StochasticArbHiddenActsReconLoss": "#/$defs/StochasticArbHiddenActsReconLossConfig", "StochasticHiddenActsReconLoss": "#/$defs/StochasticHiddenActsReconLossConfig", "StochasticReconLayerwiseLoss": "#/$defs/StochasticReconLayerwiseLossConfig", "StochasticReconLoss": "#/$defs/StochasticReconLossConfig", "StochasticReconSubsetCEAndKL": "#/$defs/StochasticReconSubsetCEAndKLConfig", "StochasticReconSubsetLoss": "#/$defs/StochasticReconSubsetLossConfig", "UVPlots": "#/$defs/UVPlotsConfig"}, "propertyName": "classname"}, "oneOf": [{"$ref": "#/$defs/FaithfulnessLossConfig"}, {"$ref": "#/$defs/ImportanceMinimalityLossConfig"}, {"$ref": "#/$defs/CIMaskedReconLossConfig"}, {"$ref": "#/$defs/CIMaskedReconSubsetLossConfig"}, {"$ref": "#/$defs/CIMaskedReconLayerwiseLossConfig"}, {"$ref": "#/$defs/StochasticReconLossConfig"}, {"$ref": "#/$defs/StochasticReconSubsetLossConfig"}, {"$ref": "#/$defs/StochasticReconLayerwiseLossConfig"}, {"$ref": "#/$defs/PGDReconLossConfig"}, {"$ref": "#/$defs/PGDReconSubsetLossConfig"}, {"$ref": "#/$defs/PGDReconLayerwiseLossConfig"}, {"$ref": "#/$defs/StochasticHiddenActsReconLossConfig"}, {"$ref": "#/$defs/StochasticArbHiddenActsReconLossConfig"}, {"$ref": "#/$defs/CEandKLLossesConfig"}, {"$ref": "#/$defs/CIHistogramsConfig"}, {"$ref": "#/$defs/CI_L0Config"}, {"$ref": "#/$defs/CIMeanPerComponentConfig"}, {"$ref": "#/$defs/ComponentActivationDensityConfig"}, {"$ref": "#/$defs/IdentityCIErrorConfig"}, {"$ref": "#/$defs/PermutedCIPlotsConfig"}, {"$ref": "#/$defs/UVPlotsConfig"}, {"$ref": "#/$defs/StochasticReconSubsetCEAndKLConfig"}]}, "title": "Eval Metric Configs", "type": "array"}, "ci_alive_threshold": {"default": 0.0, "description": "Causal importance threshold above which a component is considered 'firing'", "maximum": 1, "minimum": 0, "title": "Ci Alive Threshold", "type": "number"}, "n_examples_until_dead": {"description": "Number of examples without firing before a component is considered dead. Note that in LMs, an example is a token, not a sequence.", "exclusiveMinimum": 0, "title": "N Examples Until Dead", "type": "integer"}, "pretrained_model_class": {"description": "Fully-qualified class name of the pretrained model to load. Can be defined locally or an in external package (e.g. 'transformers.LlamaForCausalLM' or 'spd.experiments.resid_mlp.models.ResidMLP').", "title": "Pretrained Model Class", "type": "string"}, "pretrained_model_path": {"anyOf": [{"type": "string"}, {"format": "path", "type": "string"}, {"type": "null"}], "default": null, "description": "Model identifier. Local path or wandb reference (e.g. 'wandb:goodfire/spd/runs/otxwx80v' or 'mnt/my_model/checkpoint.pth')", "title": "Pretrained Model Path"}, "pretrained_model_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "hf model identifier. E.g. 'SimpleStories/SimpleStories-1.25M'", "title": "Pretrained Model Name"}, "pretrained_model_output_attr": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Name of the attribute on the forward output that contains logits or activations", "title": "Pretrained Model Output Attr"}, "tokenizer_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "default": null, "description": "Name or path of the tokenizer to use when loading an LM", "title": "Tokenizer Name"}, "task_config": {"description": "Nested task-specific configuration selected by the `task_name` discriminator", "discriminator": {"mapping": {"induction_head": "#/$defs/IHTaskConfig", "lm": "#/$defs/LMTaskConfig", "resid_mlp": "#/$defs/ResidMLPTaskConfig", "tms": "#/$defs/TMSTaskConfig"}, "propertyName": "task_name"}, "oneOf": [{"$ref": "#/$defs/TMSTaskConfig"}, {"$ref": "#/$defs/ResidMLPTaskConfig"}, {"$ref": "#/$defs/LMTaskConfig"}, {"$ref": "#/$defs/IHTaskConfig"}], "title": "Task Config"}}, "required": ["C", "n_mask_samples", "target_module_patterns", "output_loss_type", "lr", "steps", "batch_size", "train_log_freq", "eval_freq", "eval_batch_size", "slow_eval_freq", "n_eval_steps", "n_examples_until_dead", "pretrained_model_class", "task_config"], "title": "Config", "type": "object"}